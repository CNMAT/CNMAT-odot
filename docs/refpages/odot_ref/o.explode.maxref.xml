<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<c74object name="o.explode" module="odot">

	<digest>
		Explode address hierarchies into nested bundles
	</digest>

	<description>
		o.explode breaks address hierarchies into nested bundles, e.g., /foo/bar : 10 becomes /foo : { /bar : 10 }.  It is the opposite of o.flatten.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">CNMAT</metadata>
		<metadata name="tag">odot</metadata>
		<metadata name="tag">odot objects</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="FullPacket">
			<digest>
				odot bundle
			</digest>
			<description>
				An odot bundle to explode.
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="FullPacket">
			<digest>
				An exploded odot bundle
			</digest>
			<description>
				An odot bundle with nested (as opposed to flat) hierarchies.
			</description>
		</outlet>
	</outletlist>

	<!--MESSAGES-->
	<methodlist>
		<method name="FullPacket [variable]">
			<arglist />
			<digest>
				An odot bundle to explode
			</digest>
			<description>
				o.explode creates nested bundles from bundle hierarchies. That is, { /foo/bar : 1 } will yield { /foo : { /bar : 1 } }.
			</description>
		</method>
		<method name="dictionary [variable]">
			<arglist />
			<digest>
				A Max dictionary
			</digest>
			<description>
				o.explode converts a Max dictionary into an odot bundle and processes it as a FullPacket.
			</description>
		</method>
		<method name="doc">
			<arglist />
			<digest>
				Output an odot bundle containing the documentation of the object
			</digest>
			<description>
				Outputs an odot bundle containing object name, short and long descriptions of object operation, inlet and outlet information, and see also (where available).
			</description>
		</method>
		<method name="version">
			<arglist />
			<digest>
				Get current version information.
			</digest>
			<description>
				Prints the current odot build version to the Max Window.
			</description>
		</method>
	</methodlist>

	<!--DISCUSSION-->
	<discussion>
		o.explode converts bundles containing flat namespaces into bundles with nested subbundles. To achieve this, it looks for adresses containing multiple tokens (such as /foo/bar) and encodes the sub-addresses in subbundles. If the incoming bundle contains multiple addresses, o.explode finds the best fit. For example, { /foo/bar : 1, /foo/boo : 2, /foo/bee/deep : 3 } will yield { /foo : { /bar : 1, /boo : 2, /bee : { /deep : 3 } } }.
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="o.overview" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (FullPacket)">
			<description>
				An odot bundle to explode.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (FullPacket)">
			<description>
				The exploded (to contain sub-bundles) odot bundle (FullPacket).
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
				o.explode converts bundles containing flat namespaces into bundles with nested subbundles. To achieve this, it looks for adresses containing multiple tokens (such as /foo/bar) and encodes the sub-addresses in subbundles. If the incoming bundle contains multiple addresses, o.explode finds the best fit. For example, { /foo/bar : 1, /foo/boo : 2, /foo/bee/deep : 3 } will yield { /foo : { /bar : 1, /boo : 2, /bee : { /deep : 3 } } }.
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
				odot, address, bundle
			</description>
		</entry>
	</misc>

</c74object>