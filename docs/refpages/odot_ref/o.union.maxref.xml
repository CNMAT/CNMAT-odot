<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<c74object name="o.union" module="odot">

	<digest>
		Output a bundle containing the union of all messages between two bundles.
	</digest>

	<description>
		o.union takes a bundle in the left and right inlets and takes the union of their addresses and outputs the result. Messages with duplicate addresses are discarded with the most recent message (the one that came in the left inlet) taking precendence.
	</description>

	<!--METADATA-->
	<metadatalist>
		<metadata name="author">CNMAT</metadata>
		<metadata name="tag">odot</metadata>
		<metadata name="tag">odot objects</metadata>
	</metadatalist>

	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="FullPacket">
			<digest>
				odot bundle
			</digest>
			<description>
				The left hand side odot bundle for union operation.
			</description>
		</inlet>
		<inlet id="1" type="FullPacket">
			<digest>
				odot bundle
			</digest>
			<description>
				The right hand side odot bundle for union operation (set without producing output).
			</description>
		</inlet>
	</inletlist>

	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="FullPacket">
			<digest>
				Union of the odot bundles
			</digest>
			<description>
				o.union takes the addresses of the bundles passed to its right and left outlets and unions them together into a single bundle. If addresses in the right hand bundle (right inlet) are present in the left hand bundle (left inlet), the values of the left hand bundle will overwrite the values in the right hand bundle.
			</description>
		</outlet>
	</outletlist>

	<!--MESSAGES-->
	<methodlist>
		<method name="FullPacket [variable]">
			<arglist />
			<digest>
				Provide a bundle for union
			</digest>
			<description>
				odot bundles sent to the right inlet set the bundle to perform the union operation on without output. Bundles set to the left inlet are unioned with the last bundle sent to the right inlet.
			</description>
		</method>
		<method name="anything [variable]">
			<arglist />
			<digest>
				Max OSC message
			</digest>
			<description>
				A Max OSC message is converted into an odot bundle and is processed as a FullPacket.
			</description>
		</method>
		<method name="bang">
			<arglist />
			<digest>
				Output the right hand bundle
			</digest>
			<description>
				A bang message outputs the last bundle sent to the right inlet.
			</description>
		</method>
		<method name="clear">
			<arglist />
			<digest>
				Clear the right hand bundle
			</digest>
			<description>
				Clear the right hand bundle.
			</description>
		</method>
		<method name="dictionary">
			<arglist />
			<digest>
				Max dictionary
			</digest>
			<description>
				o.union converts a Max dictionary into an odot bundle and processes it as a FullPacket.
			</description>
		</method>
		<method name="doc">
			<arglist />
			<digest>
				Output an odot bundle containing the documentation of the object
			</digest>
			<description>
				Outputs an odot bundle containing object name, short and long descriptions of object operation, inlet and outlet information, and see also (where available).
			</description>
		</method>
		<method name="version">
			<arglist />
			<digest>
				Get current version information.
			</digest>
			<description>
				Prints the current odot build version to the Max Window.
			</description>
		</method>
	</methodlist>

	<!--DISCUSSION-->
	<discussion>
		o.union provides a mechanism for combining odot bundles into a single bundle. This enables separation of concerns in odot programming -- patches encapsulating particular aspects of computation necessary for the system can be sent to instances of o.union to be combined. If the addresses of the right hand bundle exist in the left hand bundle, those values are overwritten. This affords o.union to be used as an update mechanism for bundles -- results of a particular computation can be unioned with the bundle containing previous state.
	</discussion>

	<!--SEEALSO-->
	<seealsolist>
		<seealso name="o.intersection" />
		<seealso name="o.difference" />
	</seealsolist>

	<misc name = "Input">
		<entry name ="Inlet 1 (FullPacket)">
			<description>
				The left hand side of the union.
			</description>
		</entry>
		<entry name ="Inlet 2 (FullPacket)">
			<description>
				The right hand side of the union.
			</description>
		</entry>
	</misc>

	<misc name = "Output">
		<entry name ="Outlet 1 (FullPacket)">
			<description>
				The result of the union (FullPacket).
			</description>
		</entry>
	</misc>

	<misc name = "Discussion">
		<entry name ="More details">
			<description>
				o.union provides a mechanism for combining odot bundles into a single bundle. This enables separation of concerns in odot programming -- patches encapsulating particular aspects of computation necessary for the system can be sent to instances of o.union to be combined. If the addresses of the right hand bundle exist in the left hand bundle, those values are overwritten. This affords o.union to be used as an update mechanism for bundles -- results of a particular computation can be unioned with the bundle containing previous state.
			</description>
		</entry>
		<entry name ="Keywords">
			<description>
				odot, address, bundle
			</description>
		</entry>
	</misc>

</c74object>