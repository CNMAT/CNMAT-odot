#N canvas 173 75 1082 756 12;
#N canvas 230 22 1344 771 functions 0;
#X obj 65 -12 o.menu;
#X obj 65 50 o.menu;
#X obj 65 112 o.menu;
#X obj 65 174 o.menu;
#X obj 65 237 o.menu;
#N canvas 902 46 450 300 init 0;
#X obj -1476 58 o.expr;
#X msg -1476 -65 /math \, /vector \, /statistics \, /string \, /predicate
\, /conditional \, /core;
#X msg -1476 23 doc-cat \$1;
#X obj -1476 -14 symbol;
#X obj -1476 93 o.route /doc/category;
#X obj -1476 -107 loadbang;
#X obj -1476 128 outlet;
#X connect 0 0 4 0;
#X connect 1 0 3 0;
#X connect 2 0 0 0;
#X connect 3 0 2 0;
#X connect 4 0 6 0;
#X connect 5 0 1 0;
#X restore 65 -70 pd init;
#X obj 65 295 o.menu;
#N canvas 797 299 450 300 /math/operator/assignment 0;
#X obj 236 204 outlet;
#X obj 15 245 outlet;
#X obj 195 76 inlet;
#X obj 62 173 loadbang;
#X msg 62 204 displaymode 1;
#X obj 15 132 o.route /math/operator/assignment;
#X obj 92 30 inlet;
#X obj 92 61 s selector;
#X obj 23 27 inlet;
#X connect 2 0 5 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 5 1 0 0;
#X connect 6 0 7 0;
#X restore 65 147 pd /math/operator/assignment;
#X obj 65 354 o.menu;
#X obj 65 412 o.menu;
#N canvas 897 505 450 300 /math/conversion 0;
#X obj 256 164 outlet;
#X obj 35 205 outlet;
#X obj 264 49 inlet;
#X obj 82 133 loadbang;
#X msg 82 164 displaymode 1;
#X obj 35 92 o.route /math/conversion;
#X obj 103 16 inlet;
#X obj 103 47 s selector;
#X obj 36 16 inlet;
#X connect 2 0 5 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 5 1 0 0;
#X connect 6 0 7 0;
#X restore 65 386 pd /math/conversion ________;
#X obj 65 472 o.menu;
#N canvas 897 505 450 300 /math/specialfunction 0;
#X obj 256 164 outlet;
#X obj 35 205 outlet;
#X obj 291 50 inlet;
#X obj 82 133 loadbang;
#X msg 82 164 displaymode 1;
#X obj 35 92 o.route /math/specialfunction;
#X obj 129 18 inlet;
#X obj 129 49 s selector;
#X obj 39 18 inlet;
#X connect 2 0 5 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 5 1 0 0;
#X connect 6 0 7 0;
#X restore 65 446 pd /math/specialfunction ___;
#X obj 65 531 o.menu;
#N canvas 897 505 450 300 /math/constant 0;
#X obj 256 164 outlet;
#X obj 35 205 outlet;
#X obj 287 49 inlet;
#X obj 82 133 loadbang;
#X msg 82 164 displaymode 1;
#X obj 35 92 o.route /math/constant;
#X obj 127 15 inlet;
#X obj 127 46 s selector;
#X obj 37 15 inlet;
#X connect 2 0 5 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 5 1 0 0;
#X connect 6 0 7 0;
#X restore 65 505 pd /math/constant __________;
#X obj 316 -13 o.menu;
#X obj 316 44 o.menu;
#N canvas 897 505 450 300 /vector 0;
#X obj 256 164 outlet;
#X obj 35 205 outlet;
#X obj 82 133 loadbang;
#X msg 82 164 displaymode 1;
#X obj 35 92 o.route /vector;
#X obj 35 49 inlet;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X connect 4 0 1 0;
#X connect 4 1 0 0;
#X connect 5 0 4 0;
#X restore 316 -39 pd /vector _________________;
#N canvas 897 505 450 300 /statistics 0;
#X obj 256 164 outlet;
#X obj 35 205 outlet;
#X obj 256 45 inlet;
#X obj 82 133 loadbang;
#X msg 82 164 displaymode 1;
#X obj 35 92 o.route /statistics;
#X obj 104 14 inlet;
#X obj 104 45 s selector;
#X obj 34 14 inlet;
#X connect 2 0 5 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 5 1 0 0;
#X connect 6 0 7 0;
#X restore 316 18 pd /statistics _____________;
#X obj 316 101 o.menu;
#N canvas 897 505 450 300 /string/operator 0;
#X obj 256 164 outlet;
#X obj 35 205 outlet;
#X obj 249 42 inlet;
#X obj 82 133 loadbang;
#X msg 82 164 displaymode 1;
#X obj 109 14 inlet;
#X obj 109 45 s selector;
#X obj 35 92 o.route /string/operator;
#X obj 39 14 inlet;
#X connect 2 0 7 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X connect 5 0 6 0;
#X connect 7 0 1 0;
#X connect 7 1 0 0;
#X restore 316 75 pd /string/operator ________;
#X obj 316 161 o.menu;
#N canvas 897 505 450 300 /predicate 0;
#X obj 256 164 outlet;
#X obj 35 205 outlet;
#X obj 255 45 inlet;
#X obj 82 133 loadbang;
#X msg 82 164 displaymode 1;
#X obj 131 10 inlet;
#X obj 131 41 s selector;
#X obj 35 92 o.route /predicate;
#X obj 41 10 inlet;
#X connect 2 0 7 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X connect 5 0 6 0;
#X connect 7 0 1 0;
#X connect 7 1 0 0;
#X restore 316 135 pd /predicate ______________;
#X obj 316 221 o.menu;
#N canvas 897 505 450 300 /conditional 0;
#X obj 256 164 outlet;
#X obj 35 205 outlet;
#X obj 261 43 inlet;
#X obj 82 133 loadbang;
#X msg 82 164 displaymode 1;
#X obj 114 14 inlet;
#X obj 114 45 s selector;
#X obj 35 92 o.route /conditional;
#X obj 37 17 inlet;
#X connect 2 0 7 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X connect 5 0 6 0;
#X connect 7 0 1 0;
#X connect 7 1 0 0;
#X restore 316 195 pd /conditional ____________;
#X obj 316 281 o.menu;
#N canvas 897 505 450 300 /core 0;
#X obj 256 164 outlet;
#X obj 35 205 outlet;
#X obj 248 46 inlet;
#X obj 82 133 loadbang;
#X msg 82 164 displaymode 1;
#X obj 118 12 inlet;
#X obj 118 43 s selector;
#X obj 35 92 o.route /core;
#X obj 38 12 inlet;
#X connect 2 0 7 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X connect 5 0 6 0;
#X connect 7 0 1 0;
#X connect 7 1 0 0;
#X restore 316 255 pd /core ___________________;
#X obj 151 564 s selector;
#X obj 402 316 s selector;
#N canvas 217 553 932 555 selection 0;
#X obj 95 117 o.expr;
#X obj 95 150 o.route /doc/function;
#X obj 95 36 r selector;
#X obj 380 247 o.select /signature;
#X msg 95 78 doc-func \$1;
#X obj 95 302 s name;
#X obj 95 235 o.union;
#X obj 266 337 s args;
#X obj 266 300 o.collect;
#X obj 209 236 t b a;
#X obj 380 284 s signature;
#X obj 95 180 o.select /name /docstring /arg /num_optional_args /num_required_args
;
#X connect 0 0 1 0;
#X connect 1 0 11 0;
#X connect 2 0 4 0;
#X connect 3 0 10 0;
#X connect 4 0 0 0;
#X connect 6 0 5 0;
#X connect 8 0 7 0;
#X connect 9 0 8 0;
#X connect 9 1 8 0;
#X connect 11 0 6 0;
#X connect 11 1 6 1;
#X connect 11 2 9 0;
#X connect 11 3 8 0;
#X connect 11 4 8 0;
#X connect 11 5 3 0;
#X restore 288 572 pd selection;
#N canvas 889 210 450 300 /math/operator/logical 0;
#X obj 226 194 outlet;
#X obj 5 235 outlet;
#X obj 206 53 inlet;
#X obj 52 163 loadbang;
#X msg 52 194 displaymode 1;
#X obj 87 29 inlet;
#X obj 87 60 s selector;
#X obj 5 122 o.route /math/operator/logical;
#X obj 15 31 inlet;
#X connect 2 0 7 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X connect 5 0 6 0;
#X connect 7 0 1 0;
#X connect 7 1 0 0;
#X restore 65 85 pd /math/operator/logical __;
#N canvas 886 313 450 300 /math/arithmetic 0;
#X obj 246 174 outlet;
#X obj 25 215 outlet;
#X obj 162 59 inlet;
#X obj 72 143 loadbang;
#X msg 72 174 displaymode 1;
#X obj 25 102 o.route /math/arithmetic;
#X obj 80 10 inlet;
#X obj 80 41 s selector;
#X obj 23 9 inlet;
#X connect 2 0 5 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 5 1 0 0;
#X connect 6 0 7 0;
#X restore 65 209 pd /math/arithmetic ________;
#N canvas 897 505 450 300 /math/trigonometric 0;
#X obj 256 164 outlet;
#X obj 35 205 outlet;
#X obj 220 44 inlet;
#X obj 82 133 loadbang;
#X msg 82 164 displaymode 1;
#X obj 35 92 o.route /math/trigonometric;
#X obj 117 15 inlet;
#X obj 117 46 s selector;
#X obj 37 15 inlet;
#X connect 2 0 5 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 5 1 0 0;
#X connect 6 0 7 0;
#X restore 65 269 pd /math/trigonometric _____;
#N canvas 897 505 450 300 /math/power 0;
#X obj 256 164 outlet;
#X obj 35 205 outlet;
#X obj 294 47 inlet;
#X obj 82 133 loadbang;
#X msg 82 164 displaymode 1;
#X obj 35 92 o.route /math/power;
#X obj 124 19 inlet;
#X obj 124 50 s selector;
#X obj 34 19 inlet;
#X connect 2 0 5 0;
#X connect 3 0 4 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 5 1 0 0;
#X connect 6 0 7 0;
#X restore 65 328 pd /math/power _____________;
#X obj 577 107 o.message 556 70 binhex b#2F6E756D5F72657175697265645F6172
b#677320310A2F6E756D5F6F7074696F6E b#616C5F6172677320300A2F6172672F72
b#657175697265642F6E616D652F312022 b#617267756D656E7420746F2062652064
b#656372656D656E746564220A2F617267 b#2F72657175697265642F74797065732F
b#3120224F5343206164647265737322;
#N canvas 720 22 450 300 /math/operator/arithmetic 0;
#X obj -45 118 o.route /math/operator/arithmetic;
#X obj -45 75 inlet;
#X obj 176 190 outlet;
#X obj -45 230 outlet;
#X obj -21 159 loadbang;
#X msg -21 190 displaymode 1;
#X connect 0 0 3 0;
#X connect 0 1 2 0;
#X connect 1 0 0 0;
#X connect 4 0 5 0;
#X connect 5 0 3 0;
#X restore 65 -39 pd /math/operator/arithmetic;
#N canvas 864 67 450 300 /math/operator/relational 0;
#X obj 74 25 inlet;
#X obj 216 184 outlet;
#X obj -5 235 outlet;
#X obj 173 71 inlet;
#X obj -5 112 o.route /math/operator/relational;
#X obj 18 154 loadbang;
#X msg 18 185 displaymode 1;
#X obj 74 56 s selector;
#X obj 0 24 inlet;
#X connect 0 0 7 0;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X connect 4 1 1 0;
#X connect 5 0 6 0;
#X connect 6 0 2 0;
#X restore 65 23 pd /math/operator/relational;
#X obj 1124 -4 r name;
#X obj 577 20 o.message 554 40 binhex b#2F6E616D6520222D2D220A2F646F6373
b#7472696E67202244656372656D656E74 b#22;
#X obj 1126 83 r args;
#X obj 852 226 r signature;
#X obj 586 255 o.message 273 25 binhex b#2F7369676E617475726520222F726573
b#756C74203D2024312D2D22;
#X obj 586 299 o.expr eval(/signature);
#X obj 587 339 o.message 273 25 binhex b#2F7369676E617475726520222F726573
b#756C74203D202431203E20243222;
#X text 1131 -129 _;
#X text 572 -12 function information:;
#X connect 0 1 36 1;
#X connect 1 1 30 1;
#X connect 2 1 7 1;
#X connect 3 1 31 1;
#X connect 4 1 32 1;
#X connect 5 0 17 0;
#X connect 5 0 35 0;
#X connect 6 1 33 1;
#X connect 7 0 3 0;
#X connect 7 1 31 2;
#X connect 8 1 10 1;
#X connect 9 1 12 1;
#X connect 10 0 9 0;
#X connect 10 1 12 2;
#X connect 11 1 14 1;
#X connect 12 0 11 0;
#X connect 12 1 14 2;
#X connect 13 1 27 0;
#X connect 14 0 13 0;
#X connect 15 1 18 1;
#X connect 16 1 20 1;
#X connect 17 0 15 0;
#X connect 17 1 18 2;
#X connect 18 0 16 0;
#X connect 18 1 20 2;
#X connect 19 1 22 1;
#X connect 20 0 19 0;
#X connect 20 1 22 2;
#X connect 21 1 24 1;
#X connect 22 0 21 0;
#X connect 22 1 24 2;
#X connect 23 1 26 1;
#X connect 24 0 23 0;
#X connect 24 1 26 2;
#X connect 25 1 28 0;
#X connect 26 0 25 0;
#X connect 30 0 2 0;
#X connect 30 1 7 2;
#X connect 31 0 4 0;
#X connect 31 1 32 2;
#X connect 32 0 6 0;
#X connect 32 1 33 2;
#X connect 33 0 8 0;
#X connect 33 1 10 2;
#X connect 35 0 0 0;
#X connect 35 1 36 2;
#X connect 36 0 1 0;
#X connect 36 1 30 2;
#X connect 37 0 38 1;
#X connect 39 0 34 1;
#X connect 40 0 41 1;
#X connect 41 0 42 0;
#X connect 42 0 43 1;
#X restore -150 254 pd functions;
#X obj -150 82 o.message 733 115 binhex b#2F6E616D6520226F2E65787072220A2F
b#73686F727420224576616C7561746520 b#6120432D6C696B652065787072657373
b#696F6E20636F6E7461696E696E67204F b#5343206164647265737365732E220A2F
b#6C6F6E6720225768656E206974207265 b#7665697665732061207061636B65742C
b#206F2E65787072207375627374697475 b#74657320616E79204F53432061646472
b#657373657320636F6E7461696E656420 b#696E207468652065787072657373696F
b#6E20666F72207468652076616C756573 b#20746F20776869636820746865792061
b#726520626F756E6420696E2074686520 b#696E636F6D696E67207061636B65742E
b#20205468652065787072657373696F6E b#206973207468656E206576616C756174
b#656420616E642074686520726573756C b#74696E672062756E646C652C20636F6E
b#7461696E696E6720616E792073696465 b#2065666665637473206F662074686520
b#65787072657373696F6E2C206973206F b#75747075742E220A2F696E6C65742F31
b#20224F5343207061636B657420636F6E b#7461696E696E67206164647265737365
b#73207468617420746865206578707265 b#7373696F6E2077696C6C206265206170
b#706C69656420746F2E220A2F6F75746C b#65742F312022546865204F5343207061
b#636B657420636F6E7461696E696E6720 b#74686520726573756C7473206F662074
b#68652065787072657373696F6E2E22;
#N canvas 714 278 624 461 init 0;
#X obj -414 90 o.expr;
#X msg -414 58 doc;
#X obj -346 364 outlet;
#X obj -414 18 loadbang;
#X obj -414 124 o.route /doc;
#X obj -414 199 o.select /outlet /inlet /long /short;
#X obj -345 298 o.collect;
#X obj -414 159 o.route /desc;
#X obj -108 199 o.select /name;
#X obj -414 229 t b a;
#X connect 0 0 4 0;
#X connect 1 0 0 0;
#X connect 3 0 1 0;
#X connect 4 0 7 0;
#X connect 5 0 9 0;
#X connect 5 1 6 0;
#X connect 5 2 6 0;
#X connect 5 3 6 0;
#X connect 6 0 2 0;
#X connect 7 0 5 0;
#X connect 7 1 8 0;
#X connect 8 0 6 0;
#X connect 9 0 6 0;
#X connect 9 1 6 0;
#X restore 576 44 pd init;
#X obj -150 44 o.expr;
#X msg 303 238 0 \, 1 2000;
#X obj 303 308 line 1 20;
#X obj 303 343 o.message 100 55 binhex b#2F74696D6520222431220A2F66726571
b#20310A2F706861736520302E;
#X obj 303 413 o.expr /y = sin(2 * pi() * /freq * /time + /phase);
#X obj 226 337 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 292 490 o.message 135 70 binhex b#2F74696D6520302E31380A2F66726571
b#20310A2F706861736520302E0A2F7920 b#302E393034383237;
#X obj 474 495 o.route /y;
#X text -261 331 |;
#X obj 477 533 hsl 128 15 -1 1 0 0 empty empty /y -25 8 0 14 -262144
-1 -1 12096 1;
#X msg 393 273 stop;
#N canvas 184 158 1207 630 conditional-operators 0;
#X obj 158 37 loadbang;
#X msg 158 72 0 \, 1 2000;
#X obj 158 107 line 1 20;
#X obj 158 137 o.message 100 25 binhex b#2F74696D652022243122;
#X obj 158 177 o.expr /freq = /freq ?? 1 \; /phase = /phase ?? 0 \;
/y = sin(2 * pi() * /freq * /time + /phase);
#X obj 49 385 o.message 145 70 binhex b#2F74696D6520302E39370A2F66726571
b#20312E0A2F706861736520302E0A2F79 b#202D302E313837333831;
#X obj 275 336 o.expr /sign = if(/y < 0 \, -1 \, if(/y > 0 \, 1 \,
0));
#X obj 752 336 o.expr /sign = /y < 0 ? -1 : /y > 0 ? 1 : 0;
#X text 683 336 ==;
#X text 673 125 ?? is the "null coalescing operator" which returns
its left argument if it is bound in the packet \, or its right argument
otherwise;
#X obj 47 182 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 265 399 o.message 145 85 binhex b#2F74696D6520302E39370A2F66726571
b#20312E0A2F706861736520302E0A2F79 b#202D302E3138373338310A2F7369676E
b#202D312E;
#X obj 753 422 o.message 145 85 binhex b#2F74696D6520302E39370A2F66726571
b#20312E0A2F706861736520302E0A2F79 b#202D302E3138373338310A2F7369676E
b#202D312E;
#X msg 258 72 stop;
#X obj 158 255 o.if /time == 1;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 14 0;
#X connect 6 0 11 1;
#X connect 7 0 12 1;
#X connect 10 0 1 0;
#X connect 13 0 2 0;
#X connect 14 0 10 0;
#X connect 14 1 6 0;
#X connect 14 1 5 1;
#X connect 14 1 7 0;
#X restore -150 286 pd conditional-operators;
#N canvas 181 40 1034 786 list-construction 0;
#X obj 49 0 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 49 28 o.expr /foo = list(1 \, 2 \, 3);
#X obj 54 68 o.message 100 25 binhex b#2F666F6F203120322E2033;
#X obj 304 68 o.message 100 25 binhex b#2F666F6F203120322E2033;
#X obj 299 28 o.expr /foo = [1 \, 2 \, 3];
#X text 518 49 the list function is the basic list constructor which
is equvalent to enclosing comma-separated items in square brackets.
;
#X text 518 17 list(x1 \, x2 \, ... \, xn);
#X obj 49 160 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 54 228 o.message 213 25 binhex b#2F62617220312E20332E20352E20372E
b#20392E;
#X obj 304 228 o.message 169 25 binhex b#2F62617220312033203520372039
;
#X obj 49 188 o.expr /bar = aseq(1 \, 10 \, 2);
#X obj 299 188 o.expr /bar = [1:2:10];
#X text 529 212 arithmetic sequence. similar to enclosing colon separated
values in square brackets.;
#X text 527 184 aseq(start \, end \, optional: step);
#X text 2 127 |;
#X obj 47 345 o.expr /bar = nfill(5 \, 6);
#X obj 49 393 o.message 213 25 binhex b#2F62617220312E20332E20352E20372E
b#20392E;
#X obj 47 310 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 299 367 create a list of n copies of x;
#X text 300 345 nfill(n \, x);
#X obj 54 588 o.message 216 40 binhex b#2F666F6F2034203520360A2F62617220
b#3120322E20332E20342035203620372E b#20382E2039;
#X obj 374 588 o.message 256 40 binhex b#2F666F6F2034203520360A2F62617220
b#3120322E20332E20342035203620372E b#20382E2039;
#X obj 49 548 o.expr /bar = [1 \, 2 \, 3 \, /foo \, 7 \, 8 \, 9];
#X obj 369 548 o.expr /bar = list(1 \, 2 \, 3 \, /foo \, 7 \, 8 \,
9);
#X obj 49 504 o.message 100 25 binhex b#2F666F6F203420352036;
#X text 361 456 OSC addresses within square brackets are expanded and
spliced into the list just as they would be if the list had been constructed
using the equivalent function;
#N canvas 396 113 870 668 note 0;
#X obj 109 20 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 109 85 o.expr /tt = typetags(/foo);
#X obj 109 132 o.message 160 40 binhex b#2F666F6F203120322E20330A2F747420
b#2769272027642720276927;
#X obj 106 271 o.expr /tt = typetags(/foo);
#X obj 116 321 o.message 155 40 binhex b#2F666F6F2031203220330A2F74742027
b#69272027692720276927;
#X obj 106 224 o.message 100 25 binhex b#2F666F6F203120322033;
#X text 7 111 |;
#X text 364 53 since pd does not use integers there is some inconsistency
when initializing a list in an object box. see the typetag information
here.;
#X text 364 213 when initialized in an o.message object \, numbers
without a decimal are considered integers.;
#X obj 109 410 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 109 475 o.expr /tt = typetags(/foo);
#X obj 109 522 o.message 160 40 binhex b#2F666F6F2031203220330A2F74742027
b#69272027692720276927;
#X obj 109 441 o.expr /foo = int32([1 \, 2 \, 3]);
#X text 374 433 as a workaround \, you can cast the list as a specified
type for example int32();
#X obj 109 51 o.expr /foo = [1 \, 2 \, 3];
#X connect 0 0 14 0;
#X connect 1 0 2 1;
#X connect 3 0 4 1;
#X connect 5 0 3 0;
#X connect 9 0 12 0;
#X connect 10 0 11 1;
#X connect 12 0 10 0;
#X connect 14 0 1 0;
#X restore 721 362 pd note on initialization;
#X connect 0 0 1 0;
#X connect 0 0 4 0;
#X connect 1 0 2 1;
#X connect 4 0 3 1;
#X connect 7 0 10 0;
#X connect 7 0 11 0;
#X connect 10 0 8 1;
#X connect 11 0 9 1;
#X connect 15 0 16 1;
#X connect 17 0 15 0;
#X connect 22 0 20 1;
#X connect 23 0 21 1;
#X connect 24 0 22 0;
#X connect 24 0 23 0;
#X restore -150 318 pd list-construction;
#N canvas 422 63 1036 839 list-manipulation 0;
#X obj 398 41 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 398 69 o.expr /bar = aseq(0. \, 10.);
#X obj 398 124 o.expr /len/bar = length(/bar) \; /foo = /bar[[/len/bar
- 1]];
#X obj 398 215 o.expr /subset = /bar[[2 \, 3 \, 4]];
#X obj 398 340 o.expr /rev = reverse(/bar);
#X obj 398 385 o.expr /sum = sum(/bar) \; /cumsum = cumsum(/bar);
#X obj 398 446 o.expr /extrema = extrema(/bar);
#X obj 398 611 o.expr /norm = /bar / max(/bar);
#X obj 19 645 o.message 349 145 binhex b#2F62617220302E20312E20322E20332E
b#20342E20352E20362E20372E20382E20 b#392E2031302E0A2F6C656E2F62617220
b#31310A2F666F6F2031302E0A2F737562 b#73657420322E20332E20342E0A2F7265
b#762031302E20392E20382E20372E2036 b#2E20352E20342E20332E20322E20312E
b#20302E0A2F73756D2035352E0A2F6375 b#6D73756D20302E20312E20332E20362E
b#2031302E2031352E2032312E2032382E b#2033362E2034352E2035352E0A2F6578
b#7472656D6120302E2031302E0A2F6E6F b#726D20302E20302E3120302E3220302E
b#3320302E3420302E3520302E3620302E b#3720302E3820302E3920312E;
#X obj 20 495 o.message 333 145 binhex b#2F62617220302E20312E20322E20332E
b#20342E20352E20362E20372E20382E20 b#392E2031302E0A2F6C656E2F62617220
b#31310A2F666F6F2031302E0A2F737562 b#73657420322E20332E20342E0A2F7265
b#762031302E20392E20382E20372E2036 b#2E20352E20342E20332E20322E20312E
b#20302E0A2F73756D2035352E0A2F6375 b#6D73756D20302E20312E20332E20362E
b#2031302E2031352E2032312E2032382E b#2033362E2034352E2035352E0A2F6578
b#7472656D6120302E2031302E;
#X obj 20 253 o.message 320 70 binhex b#2F62617220302E20312E20322E20332E
b#20342E20352E20362E20372E20382E20 b#392E2031302E0A2F6C656E2F62617220
b#31310A2F666F6F2031302E0A2F737562 b#73657420322E20332E20342E;
#X obj 24 175 o.message 318 55 binhex b#2F62617220302E20312E20322E20332E
b#20342E20352E20362E20372E20382E20 b#392E2031302E0A2F6C656E2F62617220
b#31310A2F666F6F2031302E;
#X obj 24 105 o.message 308 25 binhex b#2F62617220302E20312E20322E20332E
b#20342E20352E20362E20372E20382E20 b#392E2031302E;
#X text -29 364 |;
#X text 697 -11 -;
#X text 661 64 construct a list;
#X text 662 125 double-square brackets can be used to index elements
of a list;
#X text 665 208 use comma separated values to extract more than one
list element;
#X text 667 390 some list operations;
#X text 668 611 arithmetic operations work over lists;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 0 12 1;
#X connect 2 0 3 0;
#X connect 2 0 11 1;
#X connect 3 0 4 0;
#X connect 3 0 10 1;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 6 0 9 1;
#X connect 7 0 8 1;
#X restore -150 350 pd list-manipulation;
#N canvas 620 235 892 648 prevent-expansion 0;
#X obj 337 96 o.message 100 25 binhex b#2F666F6F203420352036;
#X obj 337 161 o.expr /bar = [1 \, 2 \, 3 \, /foo \, quote(/foo) \,
7 \, 8 \, 9];
#X obj 337 356 o.expr /unquoted = value(/bar[[6]]);
#X text 356 192 prevent expansion of OSC addresses by placing them
inside a call to the quote() function;
#X obj 50 222 o.message 267 40 binhex b#2F666F6F2034203520360A2F62617220
b#3120322E20332E20342035203620222F b#666F6F2220372E20382E2039;
#X obj 50 412 o.message 294 55 binhex b#2F666F6F2034203520360A2F62617220
b#3120322E20332E20342035203620222F b#666F6F2220372E20382E20390A2F756E
b#71756F746564203420352036;
#X text 362 388 to force expansion \, use the value() function;
#X text -5 3 |;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 0 4 1;
#X connect 2 0 5 1;
#X restore -150 382 pd prevent-expansion;
#N canvas 493 198 860 571 dynamic-expr 0;
#X obj 352 306 o.expr eval(/foo);
#X obj 28 356 o.message 331 55 binhex b#2F666F6F20222F626172203D2073696E
b#2832202A2070692829202A203434302E b#202A202F74696D6529220A2F74696D65
b#20302E320A2F62617220332E35323839 b#36652D3134;
#X obj 352 152 o.message 302 25 binhex b#2F666F6F20222F626172203D2073696E
b#2832202A2070692829202A203430302E b#202A20302E352922;
#X obj 391 210 o.message 334 40 binhex b#2F666F6F20222F626172203D2073696E
b#2832202A2070692829202A203434302E b#202A202F74696D6529220A2F74696D65
b#20302E32;
#X obj 352 152 o.message 302 25 binhex b#2F666F6F20222F626172203D2073696E
b#2832202A2070692829202A203430302E b#202A20302E352922;
#X text 1 -4 -;
#X text 47 44 the eval function takes an OSC address as an argument
and compiles and executes its data;
#X connect 0 0 1 1;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X restore -150 414 pd dynamic-expr;
#N canvas 254 22 1066 800 high-order-functions 0;
#X obj 312 241 o.message 243 25 binhex b#2F6C6973742031203220332034202261
b#22202272222022732220227422;
#X obj 422 371 o.route /list;
#X obj 76 364 o.message 243 145 binhex b#2F6C6973742031203220332034202261
b#222022722220227322202274220A2F6C b#697374656C656D2F3120310A2F6C6973
b#74656C656D2F3220320A2F6C69737465 b#6C656D2F3320330A2F6C697374656C65
b#6D2F3420340A2F6C697374656C656D2F b#35202261220A2F6C697374656C656D2F
b#36202272220A2F6C697374656C656D2F b#37202273220A2F6C697374656C656D2F
b#3820227422;
#X obj 287 543 o.message 243 145 binhex b#2F6C697374656C656D2F3120310A2F6C
b#697374656C656D2F3220320A2F6C6973 b#74656C656D2F3320330A2F6C69737465
b#6C656D2F3420340A2F6C697374656C65 b#6D2F35202261220A2F6C697374656C65
b#6D2F36202272220A2F6C697374656C65 b#6D2F37202273220A2F6C697374656C65
b#6D2F38202274220A2F6E65776C697374 b#20312032203320342022612220227222
b#2022732220227422;
#X obj 684 514 o.route /listelem;
#X obj 581 556 o.message 243 25 binhex b#2F6E65776C6973742031203220332034
b#20226122202272222022732220227422 b#;
#X obj 93 -93 o.message 134 40 binhex b#2F66756E63202273696E220A2F617267
b#20332E3134313539;
#X obj 93 -28 o.expr /result = apply(/func \, /arg);
#X obj 94 11 o.message 216 55 binhex b#2F66756E63202273696E220A2F617267
b#20332E31343135390A2F726573756C74 b#20322E3635333539652D3036;
#X obj 426 -96 o.message 134 40 binhex b#2F6120320A2F622033;
#X obj 426 40 o.message 216 70 binhex b#2F6120320A2F6220330A2F73756D2035
b#0A2F70726F647563742036;
#X text 7 -156 -;
#X obj 426 -36 o.expr apply(lambda(a \, b)#[ /sum = a + b \; /product
= a * b \; ]# \, /a \, /b);
#X obj 312 281 o.expr map(lambda(l \, i)#[ assign("/listelem/" +i \,
l) \; ]# \, /list \, aseq(1 \, length(/list)));
#X obj 523 402 o.expr map(lambda(v)#[ if(bound(/newlist) \, /newlist
= list(/newlist \, value(v)) \, /newlist = value(v)) \; ]# \, getaddresses())
;
#X text 91 122 Anonymous functions are supported with the following
syntax: lambda(arg1 \, arg2 \, ... \, argn) #[ expr1 \; expr2 \; exprn
\; ]#;
#X connect 0 0 13 0;
#X connect 1 1 14 0;
#X connect 4 1 5 1;
#X connect 6 0 7 0;
#X connect 7 0 8 1;
#X connect 9 0 12 0;
#X connect 12 0 10 1;
#X connect 13 0 1 0;
#X connect 13 0 2 1;
#X connect 14 0 3 1;
#X connect 14 0 4 0;
#X restore -150 446 pd high-order-functions;
#N canvas 367 75 1072 699 introspection 0;
#X obj 350 149 o.expr /hasstuff = !emptybundle();
#X obj 350 202 o.expr /addresses = getaddresses();
#X obj 350 257 o.expr /msgcount = getmsgcount();
#X obj 350 343 o.expr /bloo = /addresses[[1]];
#X obj 729 348 o.expr /bloo = value(/addresses[[1]]);
#X obj 350 78 o.message 193 40 binhex b#2F666F6F202261222022722220227322
b#202274220A2F62617220226F22202269 b#222022652220226E22;
#X text 624 148 see if the bundle is empty;
#X text 625 203 get a list of all the addresses in the bundle;
#X text 625 255 get the number of messages in the bundle;
#X text 432 549 the addresses assigned to /addresses are strings and
will not be interpreted unless passed to the values() function;
#X obj 66 426 o.message 291 100 binhex b#2F666F6F202261222022722220227322
b#202274220A2F62617220226F22202269 b#222022652220226E220A2F6861737374
b#75666620747275650A2F616464726573 b#73657320222F666F6F2220222F626172
b#2220222F6861737374756666220A2F6D b#7367636F756E7420340A2F626C6F6F20
b#222F62617222;
#X obj 445 426 o.message 291 100 binhex b#2F666F6F202261222022722220227322
b#202274220A2F62617220226F22202269 b#222022652220226E220A2F6861737374
b#75666620747275650A2F616464726573 b#73657320222F666F6F2220222F626172
b#2220222F6861737374756666220A2F6D b#7367636F756E7420340A2F626C6F6F20
b#226F22202269222022652220226E22;
#X text 13 5 -;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 2 0 4 0;
#X connect 3 0 10 1;
#X connect 4 0 11 1;
#X connect 5 0 0 0;
#X restore -150 478 pd introspection;
#N canvas 334 147 1163 741 documentation 0;
#X obj 71 361 o.expr;
#X msg 71 84 doc;
#X obj 55 433 o.message 543 220 binhex b#2F646F632F6E616D6520226F65787072
b#220A2F646F632F646573632F73686F72 b#7420224576616C75617465206120432D
b#6C696B652065787072657373696F6E20 b#636F6E7461696E696E67204F53432061
b#64647265737365732E220A2F646F632F b#646573632F6C6F6E6720225768656E20
b#69742072657665697665732061207061 b#636B65742C206F2E6578707220737562
b#737469747574657320616E79204F5343 b#2061646472657373657320636F6E7461
b#696E656420696E207468652065787072 b#657373696F6E20666F72207468652076
b#616C75657320746F2077686963682074 b#6865792061726520626F756E6420696E
b#2074686520696E636F6D696E67207061 b#636B65742E2054686520657870726573
b#73696F6E206973207468656E20657661 b#6C756174656420616E64207468652072
b#6573756C74696E672062756E646C652C b#20636F6E7461696E696E6720616E7920
b#736964652065666665637473206F6620 b#7468652065787072657373696F6E2C20
b#6973206F75747075742E220A2F646F63 b#2F6E696E6C65747320310A2F646F632F
b#6E6F75746C65747320310A2F646F632F b#646573632F696E6C65742F3120224F53
b#43207061636B657420636F6E7461696E b#696E6720616464726573736573207468
b#6174207468652065787072657373696F b#6E2077696C6C206265206170706C6965
b#6420746F2E220A2F646F632F64657363 b#2F6F75746C65742F312022546865204F
b#5343207061636B657420636F6E746169 b#6E696E672074686520726573756C7473
b#206F6620746865206578707265737369 b#6F6E2E220A2F646F632F736565616C73
b#6F20226F2E63616C6C70617463682220 b#226F2E69662220226F2E636F6E642220
b#226F2E7768656E2220226F2E756E6C65 b#7373222022657870722220226A69742E
b#6578707222;
#X msg 121 164 doc-cat;
#X msg 201 234 doc-cat /math/operator/*;
#X msg 421 234 doc-cat /math/constant;
#X msg 413 314 doc-func sin;
#X text 130 70 o.expr (like all odot objects) responds to the doc message
and produces an OSC bundle with basic information about the object
;
#X text 195 161 get a bundle of all function categories;
#X text 545 312 get documentation for a specific function;
#X text 5 0 -;
#X text 621 229 get the functions contained in a specific category
(pattern matching works);
#X connect 0 0 2 1;
#X connect 1 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X restore -150 510 pd documentation;
#X obj 303 448 o.if /time == 1;
#X obj 303 210 loadbang;
#X connect 2 0 1 1;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 7 0 22 0;
#X connect 8 0 4 0;
#X connect 10 0 12 0;
#X connect 13 0 5 0;
#X connect 22 0 8 0;
#X connect 22 1 9 1;
#X connect 22 1 10 0;
#X connect 23 0 4 0;
